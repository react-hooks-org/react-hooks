(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{269:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return y}));var o=t(0),r=t.n(o);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),u=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),b=o,y=p["".concat(i,".").concat(b)]||p[b]||d[b]||s;return t?r.a.createElement(y,a(a({ref:n},l),{},{components:t})):r.a.createElement(y,a({ref:n},l))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,i=new Array(s);i[0]=b;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<s;l++)i[l]=t[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},86:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return a})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var o=t(2),r=t(6),s=(t(0),t(269)),i={id:"use-key",title:"use-key",sidebar_label:"use-key",original_id:"use-key"},a={unversionedId:"use-key",id:"version-3.5.0/use-key",isDocsHomePage:!1,title:"use-key",description:"@rooks/use-key",source:"@site/versioned_docs/version-3.5.0/use-key.md",slug:"/use-key",permalink:"/docs/3.5.0/use-key",version:"3.5.0",sidebar_label:"use-key",sidebar:"version-3.5.0/docs",previous:{title:"use-isomorphic-effect",permalink:"/docs/3.5.0/use-isomorphic-effect"},next:{title:"use-keys",permalink:"/docs/3.5.0/use-keys"}},c=[{value:"keypress, keyup and keydown event handlers as hooks for react.",id:"keypress-keyup-and-keydown-event-handlers-as-hooks-for-react",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Importing the hook",id:"importing-the-hook",children:[]},{value:"Usage",id:"usage",children:[]}],l={rightToc:c};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(o.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"rooksuse-key"},"@rooks/use-key"),Object(s.b)("h3",{id:"keypress-keyup-and-keydown-event-handlers-as-hooks-for-react"},"keypress, keyup and keydown event handlers as hooks for react."),Object(s.b)("br",null),Object(s.b)("p",null,Object(s.b)("img",Object(o.a)({parentName:"p"},{src:"https://github.com/imbhargav5/rooks/workflows/Node%20CI/badge.svg",alt:"Build Status"})),Object(s.b)("img",Object(o.a)({parentName:"p"},{src:"https://img.shields.io/npm/v/@rooks/use-key/latest.svg",alt:null}))," ",Object(s.b)("img",Object(o.a)({parentName:"p"},{src:"https://img.shields.io/npm/l/@rooks/use-key.svg",alt:null}))," ",Object(s.b)("img",Object(o.a)({parentName:"p"},{src:"https://img.shields.io/npm/dt/@rooks/use-key.svg",alt:null}))," ",Object(s.b)("img",Object(o.a)({parentName:"p"},{src:"https://img.shields.io/david/imbhargav5/rooks.svg?path=packages%2Fkey",alt:null}))),Object(s.b)("a",{href:"https://spectrum.chat/rooks"},Object(s.b)("img",{src:"https://withspectrum.github.io/badge/badge.svg",alt:"Join the community on Spectrum"})),Object(s.b)("h3",{id:"installation"},"Installation"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{}),"npm install --save @rooks/use-key\n")),Object(s.b)("h3",{id:"importing-the-hook"},"Importing the hook"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),'import useKey from "@rooks/use-key";\n')),Object(s.b)("h3",{id:"usage"},"Usage"),Object(s.b)("h4",{id:"basic-example-with-keydown"},"Basic example with keydown"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'function Demo() {\n  const inputRef = useRef();\n  function windowEnter(e) {\n    console.log("[Demo 1] Enter key was pressed on window");\n  }\n  function vowelsEntered(e) {\n    console.log("[Demo 1] You typed a vowel");\n  }\n  function capitalVowelsEntered(e) {\n    console.log("[Demo 1] You typed a capital vowel");\n  }\n  // window is the target\n  useKey(["Enter"], windowEnter);\n  useKey(["a", "e", "i", "o", "u"], vowelsEntered, {\n    target: inputRef\n  });\n  useKey(["A", "E", "I", "O", "U"], capitalVowelsEntered, {\n    target: inputRef\n  });\n  return (\n    <>\n      <p>Press enter anywhere to trigger a console.log statement</p>\n      <p>Press a,e,i,o,u in the input to trigger a console.log statement</p>\n      <p>Press A,E,I,O,U in the input to trigger a different log statement</p>\n      <input ref={inputRef} />\n    </>\n  );\n}\n\nrender(<Demo />);\n')),Object(s.b)("h4",{id:"multiple-kinds-of-events"},"Multiple kinds of events"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'function Demo() {\n  const inputRef = useRef();\n  function onKeyInteraction(e) {\n    console.log("[Demo 2]Enter key", e.type);\n  }\n\n  useKey(["Enter"], onKeyInteraction, {\n    target: inputRef,\n    eventTypes: ["keypress", "keydown", "keyup"]\n  });\n  return (\n    <>\n      <p>Try "Enter" Keypress keydown and keyup </p>\n      <p>\n        It will log 3 events on this input. Since you can listen to multiple\n        types of events on a keyboard key.\n      </p>\n      <input ref={inputRef} />\n    </>\n  );\n}\nrender(<Demo />);\n')),Object(s.b)("h4",{id:"conditionally-setting-handlers"},"Conditionally setting handlers"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'function Demo() {\n  const inputRef = useRef();\n  const [shouldListen, setShouldListen] = useState(false);\n  function toggleShouldListen() {\n    setShouldListen(!shouldListen);\n  }\n  function onKeyInteraction(e) {\n    console.log("[Demo 3] Enter key", e.type);\n  }\n\n  useKey(["Enter"], onKeyInteraction, {\n    target: inputRef,\n    eventTypes: ["keypress", "keydown", "keyup"],\n    when: shouldListen\n  });\n  return (\n    <>\n      <p>\n        Enter key events will only be logged when the listening state is true.\n        Click on the button to toggle between listening and not listening\n        states.{" "}\n      </p>\n      <p>\n        Handy for adding and removing event handlers only when certain\n        conditions are met.\n      </p>\n      <input ref={inputRef} />\n      <br />\n      <button onClick={toggleShouldListen}>\n        <b>{shouldListen ? "Listening" : "Not listening"}</b> - Toggle{" "}\n      </button>\n    </>\n  );\n}\nrender(<Demo />);\n')))}u.isMDXComponent=!0}}]);